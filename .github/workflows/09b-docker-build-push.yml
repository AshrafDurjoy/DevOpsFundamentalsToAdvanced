name: 09b - Docker Build and Push Demo

on: 
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'Dockerfile'
      - '.github/workflows/09b-docker-build-push.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write  # Required for security scanning

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning

      - name: Create Dockerfile if not exists
        run: |
          if [ ! -f "Dockerfile" ]; then
            echo "Creating demo Dockerfile..."
            cat > Dockerfile << 'EOL'
            FROM nginx:alpine
            RUN echo "<html><body><h1>Docker Demo</h1></body></html>" > /usr/share/nginx/html/index.html
            EXPOSE 80
            CMD ["nginx", "-g", "daemon off;"]
            EOL
            echo "Demo Dockerfile created"
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64,amd64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Add Dockerfile linting
      - name: Lint Dockerfile
        run: |
          echo "Linting Dockerfile..."
          if grep -q "FROM.*latest" Dockerfile; then
            echo "::warning::Using 'latest' tag in FROM instruction is not recommended. Use specific version instead."
          fi
          echo "Basic Dockerfile linting completed"

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            type=semver,pattern={{version}}
            latest

      - name: Build Docker image for multiple platforms
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false  # Don't actually push in demo mode
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      # Add container security scanning
      - name: Security scan for vulnerabilities
        run: |
          echo "Simulating container security scanning..."
          echo "‚úÖ No critical vulnerabilities found"
          echo "‚ö†Ô∏è 2 medium vulnerabilities detected (demo)"
          echo "For actual scanning, consider using:"
          echo "  - Trivy: aquasecurity/trivy-action"
          echo "  - Snyk: snyk/actions"

      - name: Simulate image push
        run: |
          echo "üöÄ In a real workflow, the image would be pushed to: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "üìù With the following tags:"
          echo "${{ steps.meta.outputs.tags }}" | tr '\n' ' '
          echo ""
          echo "‚úÖ Image build successful!"
          echo "üìä Image details:"
          echo "  - Architecture: linux/amd64, linux/arm64"
          echo "  - Created: $(date -u)"